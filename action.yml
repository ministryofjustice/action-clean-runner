---
name: Clean Actions Runner
description: This action frees up space on a GitHub-hosted runner

inputs:
  confirm:
    description: Confirm that you want to remove the software
    required: true
    default: false
  remove_opt_google:
    description: Remove /opt/google
    required: true
    default: true
  remove_opt_hostedtoolcache:
    description: Remove /opt/hostedtoolcache
    required: true
    default: true
  remove_opt_microsoft:
    description: Remove /opt/microsoft
    required: true
    default: true
  remove_opt_pipx:
    description: Remove /opt/pipx
    required: true
    default: true
  remove_usr_lib_firefox:
    description: Remove /usr/lib/firefox
    required: true
    default: true
  remove_usr_lib_google_cloud_sdk:
    description: Remove /usr/lib/google-cloud-sdk
    required: true
    default: true
  remove_usr_lib_llvm_16:
    description: Remove /usr/lib/llvm-16
    required: true
    default: true
  remove_usr_lib_llvm_17:
    description: Remove /usr/lib/llvm-17
    required: true
    default: true
  remove_usr_lib_llvm_18:
    description: Remove /usr/lib/llvm-18
    required: true
    default: true
  remove_usr_local_julia:
    description: Remove /usr/local/julia*
    required: true
    default: true
  remove_usr_local_lib_android:
    description: Remove /usr/local/lib/android
    required: true
    default: true
  remove_usr_local_lib_node_modules:
    description: Remove /usr/local/lib/node_modules
    required: true
    default: true
  remove_usr_local_share_chromium:
    description: Remove /usr/local/share/chromium
    required: true
    default: true
  remove_usr_local_share_powershell:
    description: Remove /usr/local/share/powershell
    required: true
    default: true
  remove_usr_share_dotnet:
    description: Remove /usr/share/dotnet
    required: true
    default: true
  remove_usr_share_miniconda:
    description: Remove /usr/share/miniconda
    required: true
    default: true
  remove_usr_share_swift:
    description: Remove /usr/share/swift
    required: true
    default: true

outputs: {}

runs:
  using: composite
  steps:
    - name: Run Cleanup
      id: run_cleanup
      shell: bash
      env:
        CONFIRM: ${{ inputs.confirm }}
        REMOVE_OPT_GOOGLE: ${{ inputs.remove_opt_google }}
        REMOVE_OPT_HOSTEDTOOLCACHE: ${{ inputs.remove_opt_hostedtoolcache }}
        REMOVE_OPT_MICROSOFT: ${{ inputs.remove_opt_microsoft }}
        REMOVE_OPT_PIPX: ${{ inputs.remove_opt_pipx }}
        REMOVE_USR_LIB_FIREFOX: ${{ inputs.remove_usr_lib_firefox }}
        REMOVE_USR_LIB_GOOGLE_CLOUD_SDK: ${{ inputs.remove_usr_lib_google_cloud_sdk }}
        REMOVE_USR_LIB_LLVM_16: ${{ inputs.remove_usr_lib_llvm_16 }}
        REMOVE_USR_LIB_LLVM_17: ${{ inputs.remove_usr_lib_llvm_17 }}
        REMOVE_USR_LIB_LLVM_18: ${{ inputs.remove_usr_lib_llvm_18 }}
        REMOVE_USR_LOCAL_JULIA: ${{ inputs.remove_usr_local_julia }}
        REMOVE_USR_LOCAL_LIB_ANDROID: ${{ inputs.remove_usr_local_lib_android }}
        REMOVE_USR_LOCAL_LIB_NODE_MODULES: ${{ inputs.remove_usr_local_lib_node_modules }}
        REMOVE_USR_LOCAL_SHARE_CHROMIUM: ${{ inputs.remove_usr_local_share_chromium }}
        REMOVE_USR_LOCAL_SHARE_POWERSHELL: ${{ inputs.remove_usr_local_share_powershell }}
        REMOVE_USR_SHARE_DOTNET: ${{ inputs.remove_usr_share_dotnet }}
        REMOVE_USR_SHARE_MINICONDA: ${{ inputs.remove_usr_share_miniconda }}
        REMOVE_USR_SHARE_SWIFT: ${{ inputs.remove_usr_share_swift }}
      run: |
        if [[ "${CONFIRM}" == "true" ]]; then
          echo "Confirmed"
        else
          echo "Not confirmed, to confirm set 'confirm: true'"
          exit 1
        fi

        usageBefore=$(df --human-readable /)
        export usageBefore

        if [[ "${REMOVE_OPT_GOOGLE}" ]]; then
          echo "Removing /opt/google"
          sudo rm --force --recursive /opt/google
        else
          echo "Not removing /opt/google, to remove set 'remove_opt_google: true'"
        fi

        if [[ "${REMOVE_OPT_HOSTEDTOOLCACHE}" ]]; then
          echo "Removing /opt/hostedtoolcache"
          sudo rm --force --recursive /opt/hostedtoolcache
        else
          echo "Not removing /opt/hostedtoolcache, to remove set 'remove_opt_hostedtoolcache: true'"
        fi

        if [[ "${REMOVE_OPT_MICROSOFT}" ]]; then
          echo "Removing /opt/microsoft"
          sudo rm --force --recursive /opt/microsoft
        else
          echo "Not removing /opt/microsoft, to remove set 'remove_opt_microsoft: true'"
        fi

        if [[ "${REMOVE_OPT_PIPX}" ]]; then
          echo "Removing /opt/pipx"
          sudo rm --force --recursive /opt/pipx
        else
          echo "Not removing /opt/pipx, to remove set 'remove_opt_pipx: true'"
        fi

        if [[ "${REMOVE_USR_LIB_FIREFOX}" ]]; then
          echo "Removing /usr/lib/firefox"
          sudo rm --force --recursive /usr/lib/firefox
        else
          echo "Not removing /usr/lib/firefox, to remove set 'remove_usr_lib_firefox: true'"
        fi

        if [[ "${REMOVE_USR_LIB_GOOGLE_CLOUD_SDK}" ]]; then
          echo "Removing /usr/lib/google-cloud-sdk"
          sudo rm --force --recursive /usr/lib/google-cloud-sdk
        else
          echo "Not removing /usr/lib/google-cloud-sdk, to remove set 'remove_usr_lib_google_cloud_sdk: true'"
        fi

        if [[ "${REMOVE_USR_LIB_LLVM_16}" ]]; then
          echo "Removing /usr/lib/llvm-16"
          sudo rm --force --recursive /usr/lib/llvm-16
        else
          echo "Not removing /usr/lib/llvm-16, to remove set 'remove_usr_lib_llvm_16: true'"
        fi

        if [[ "${REMOVE_USR_LIB_LLVM_17}" ]]; then
          echo "Removing /usr/lib/llvm-17"
          sudo rm --force --recursive /usr/lib/llvm-17
        else
          echo "Not removing /usr/lib/llvm-17, to remove set 'remove_usr_lib_llvm_17: true'"
        fi

        if [[ "${REMOVE_USR_LIB_LLVM_18}" ]]; then
          echo "Removing /usr/lib/llvm-18"
          sudo rm --force --recursive /usr/lib/llvm-18
        else
          echo "Not removing /usr/lib/llvm-18, to remove set 'remove_usr_lib_llvm_18: true'"
        fi

        if [[ "${REMOVE_USR_LOCAL_JULIA}" ]]; then
          echo "Removing /usr/local/julia*"
          sudo rm --force --recursive /usr/local/julia*
        else
          echo "Not removing /usr/local/julia*, to remove set 'remove_usr_local_julia: true'"
        fi

        if [[ "${REMOVE_USR_LOCAL_LIB_ANDROID}" ]]; then
          echo "Removing /usr/local/lib/android"
          sudo rm --force --recursive /usr/local/lib/android
        else
          echo "Not removing /usr/local/lib/android, to remove set 'remove_usr_local_lib_android: true'"
        fi

        if [[ "${REMOVE_USR_LOCAL_LIB_NODE_MODULES}" ]]; then
          echo "Removing /usr/local/lib/node_modules"
          sudo rm --force --recursive /usr/local/lib/node_modules
        else
          echo "Not removing /usr/local/lib/node_modules, to remove set 'remove_usr_local_lib_node_modules: true'"
        fi

        if [[ "${REMOVE_USR_LOCAL_SHARE_CHROMIUM}" ]]; then
          echo "Removing /usr/local/share/chromium"
          sudo rm --force --recursive /usr/local/share/chromium
        else
          echo "Not removing /usr/local/share/chromium, to remove set 'remove_usr_local_share_chromium: true'"
        fi

        if [[ "${REMOVE_USR_LOCAL_SHARE_POWERSHELL}" ]]; then
          echo "Removing /usr/local/share/powershell"
          sudo rm --force --recursive /usr/local/share/powershell
        else
          echo "Not removing /usr/local/share/powershell, to remove set 'remove_usr_local_share_powershell: true'"
        fi

        if [[ "${REMOVE_USR_SHARE_DOTNET}" ]]; then
          echo "Removing /usr/share/dotnet"
          sudo rm --force --recursive /usr/share/dotnet
        else
          echo "Not removing /usr/share/dotnet, to remove set 'remove_usr_share_dotnet: true'"
        fi

        if [[ "${REMOVE_USR_SHARE_MINICONDA}" ]]; then
          echo "Removing /usr/share/miniconda"
          sudo rm --force --recursive /usr/share/miniconda
        else
          echo "Not removing /usr/share/miniconda, to remove set 'remove_usr_share_miniconda: true'"
        fi

        if [[ "${REMOVE_USR_SHARE_SWIFT}" ]]; then
          echo "Removing /usr/share/swift"
          sudo rm --force --recursive /usr/share/swift
        else
          echo "Not removing /usr/share/swift, to remove set 'remove_usr_share_swift: true'"
        fi

        usageAfter=$(df --human-readable /)
        export usageAfter

        availableBefore=$(echo "${usageBefore}" | awk '{print $4}' | tail --lines=+2 | sed 's/G//')
        availableAfter=$(echo "${usageAfter}" | awk '{print $4}' | tail --lines=+2 | sed 's/G//')

        totalFreed=$((availableAfter - availableBefore))
        echo "Total freed space: ${totalFreed}GiB"

        echo "### ðŸ§¼ Clean Runner Summary" >>"${GITHUB_STEP_SUMMARY}"
        echo "Before cleanup: ${availableBefore}GiB" >>"${GITHUB_STEP_SUMMARY}"
        echo "After cleanup: ${availableAfter}GiB" >>"${GITHUB_STEP_SUMMARY}"
        echo "Total freed: ${totalFreed}GiB" >>"${GITHUB_STEP_SUMMARY}"
